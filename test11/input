;;teste 11
(ignore-value (setf x>y #'(lambda (psr) (let ((x (psr-variavel-valor psr "x")) (y (psr-variavel-valor psr "y"))) (if (and x y) (> x y) T)))))
(ignore-value (setf x<3 #'(lambda (psr) (let ((x (psr-variavel-valor psr "x"))) (if x (< x 3) T)))))
(ignore-value (setf psr1 (cria-psr (list "x" "y" "z") (list (list 0 1 2 3 4 5) (list 0 1 2 3 4) (list 0 1 2 3))(list (cria-restricao (list "x" "y") x>y) (cria-restricao (list "x") x<3)))))
;;retorna T;1
(psr-atribuicoes-consistentes-arco-p psr1 "x" 2 "y" 1)
;;retorna NIL;1
(psr-atribuicoes-consistentes-arco-p psr1 "x" 1 "y" 4)
;;retorna T;0
(psr-atribuicoes-consistentes-arco-p psr1 "z" 2 "y" 2)
;;retorna NIL
(psr-atribuicoes psr1)
;;retorna ("x" "y" "z")
(psr-variaveis-nao-atribuidas psr1)
;;retorna NIL
(psr-variavel-valor psr1 "x")
;;retorna NIL
(psr-variavel-valor psr1 "y")
;;retorna (0 1 2 3 4 5)
(psr-variavel-dominio psr1 "x")
;;retorna (0 1 2 3 4)
(psr-variavel-dominio psr1 "y")
